server_names_hash_bucket_size 128;

map $http_x_forwarded_proto $updated_scheme {
     default $scheme;
     https https;
}

server {
    server_name @domain@ www.@domain@;

    location / {
        proxy_pass http://site/;
    }

    listen 80 default_server;
    listen [::]:80 default_server;
}

server {
    server_name scorecard.@domain@;

    location / {
        proxy_pass http://scorecard/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name ci.@domain@;

    location ~ /(test-ci-[a-z0-9]+)/(.*) {
        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://$1.batch-pods.svc.cluster.local/$2;
    }

    location / {
        proxy_pass http://hail-ci/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name ci2.@domain@;

    location / {
        proxy_pass http://ci2/;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name upload.@domain@;

    location / {
        proxy_pass http://upload/;
    }

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto https;

    listen 80;
    listen [::]:80;
}

server {
    server_name notebook.@domain@;

    # needed to correctly handle error_page with internal handles
    recursive_error_pages on;

    location = /auth {
        internal;
        proxy_pass http://notebook/auth/$jupyter_auth_name;
    }

    location ~ /instance/([^/]+)/(.*) {
        set $jupyter_auth_name $1;
        auth_request /auth;

        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://$1.default.svc.cluster.local$request_uri;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

        proxy_connect_timeout 5s;

        proxy_intercept_errors on;
        # 502: no service, 504: pod not responding
        error_page 502 504 = @pod_dead;
    }

    location @pod_dead {
        return 307 $updated_scheme://$http_host/new;
    }

    location ~ /instance-ready/([^/]+)/ {
        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://$1.default.svc.cluster.local/instance/$1/;
    }

    location / {
        proxy_pass http://notebook/;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    listen 80;
    listen [::]:80;
}

server {
    server_name notebook2.@domain@;

    # needed to correctly handle error_page with internal handles
    recursive_error_pages on;

    location = /auth {
        internal;
        proxy_pass http://notebook2/auth/$pod_uuid;
    }

    location ~ /instance/([^/]+)/(.*) {
        set $pod_uuid $1;
        auth_request /auth;
        auth_request_set $auth_pod_ip $upstream_http_pod_ip;

        proxy_pass http://$auth_pod_ip$request_uri;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

        proxy_connect_timeout 5s;

        proxy_intercept_errors on;
        # 502: no service, 504: pod not responding
        error_page 502 504 = @pod_dead;
    }

    location @pod_dead {
        set $args "?err=Notebook not found";
        return 307 $updated_scheme://$http_host/error$args;
    }

    location ~ /instance-ready/([^/]+)/ {
        set $pod_uuid $1;
        auth_request /auth;
        auth_request_set $auth_pod_ip $upstream_http_pod_ip;

        proxy_pass http://$auth_pod_ip/instance/$1/;
    }

    location / {
        proxy_pass http://notebook2/;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $updated_scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    listen 80;
    listen [::]:80;
}
